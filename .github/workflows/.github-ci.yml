name: Terraform CI/CD

on:
  pull_request:
    branches: [ "main", "dev" ]
  push:
    branches: [ "main", "dev" ]
  workflow_dispatch:  # Allows manual trigger for Terraform Apply

permissions:
  contents: read

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Initialize Terraform
        run: terraform init

      - name: Check Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            terraform plan -input=false -var-file=prod.tfvars -out=tfplan
          else
            terraform plan -input=false -var-file=exp.tfvars -out=tfplan
          fi

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  terraform-apply:
    name: Terraform Apply (Manual Approval)
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Apply (Manual)
        run: terraform apply -auto-approve tfplan
